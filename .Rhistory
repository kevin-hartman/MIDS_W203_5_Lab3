suppressMessages(library(expss))
suppressMessages(library(car))
suppressMessages(library(corrplot))
suppressMessages(library(gridExtra))
suppressMessages(library(corrr))
suppressMessages(library(Hmisc))
suppressMessages(library(broom))
suppressMessages(library(lmtest))
suppressMessages(library(sandwich))
suppressMessages(library(PerformanceAnalytics))
suppressMessages(library(psych))
suppressMessages(library(GGally))
suppressMessages(library(ggcorrplot))
suppressMessages(library(knitr))
knitr::opts_chunk$set(echo = TRUE)
dfCrime = read.csv("crime_v2.csv")
str(dfCrime)
head(dfCrime)
tail(dfCrime)
#summary(dfCrime)
nrow(dfCrime)
dfCrime <-na.omit(dfCrime) # omit the NA rows
nrow(dfCrime)
dfCrime[duplicated(dfCrime),]
dfCrime <- dfCrime[!duplicated(dfCrime),] # remove the duplicated row
nrow(dfCrime)
dfCrime$prbconv<-as.numeric(levels(dfCrime$prbconv))[dfCrime$prbconv]
dfCrime$pctmin80<-dfCrime$pctmin80/100
dfCrime$county<-as.factor(dfCrime$county)
dfCrime %>% group_by(west, central) %>% tally()
dfCrime %>%
filter(west ==1 & central ==1)
#Map central and west to a region code, and create a new category for other
# Note that county 71 has both western and central codes
dfCrime$region <- case_when (
(dfCrime$central ==0 & dfCrime$west ==0) ~ 0, #Eastern, Coastal, Other
(dfCrime$central ==0 & dfCrime$west ==1) ~ 1, #Western
(dfCrime$central ==1 & dfCrime$west ==0) ~ 2, #Central
(dfCrime$central ==1 & dfCrime$west ==1) ~ 3 #Central-Western county?
)
dfCrime$regcode =
factor( dfCrime$region , levels = 0:3 , labels =
c( 'O',
'W',
'C',
'CW')
)
dfCrime$other <- ifelse((dfCrime$central ==0 & dfCrime$west ==0), 1, 0)
dfCrime$nonurban <- ifelse((dfCrime$urban==0), 1, 0)
# create factor for SMSA (standard metropolitan statistical areas) with two levels
# (inside or outside)
#    https://www2.census.gov/prod2/decennial/documents/1980/1980censusofpopu8011uns_bw.pdf
dfCrime$metro =
factor( dfCrime$urban , levels = 0:1 , labels =
c( 'Outside',
'Inside'
)
)
#Plot of the economic and tax related variables vs crmrte
q1<-ggplot(data = dfCrime, aes(x = wcon, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q2<-ggplot(data = dfCrime, aes(x = wtuc, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q3<-ggplot(data = dfCrime, aes(x = wtrd, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q4<-ggplot(data = dfCrime, aes(x = wfir, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q5<-ggplot(data = dfCrime, aes(x = wser, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q6<-ggplot(data = dfCrime, aes(x = wmfg, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q7<-ggplot(data = dfCrime, aes(x = wfed, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q8<-ggplot(data = dfCrime, aes(x = wsta, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q9<-ggplot(data = dfCrime, aes(x = wloc, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q10<-ggplot(data = dfCrime, aes(x = taxpc, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
grid.arrange(q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, ncol=2)
dfCrime %>%
filter(wser > 2000) %>%
select(county, wser)
dfCrime$wser[which(dfCrime$county==185)]<-NA # set the value to NA so it will be imputed
impute_arg <- aregImpute(~ crmrte +  urban + central + west + other +
prbarr + prbconv + prbpris + avgsen + polpc +
density + taxpc + pctmin80 + wcon + wtuc +
wtrd + wfir + wser + wmfg + wfed + wsta + wloc +
mix + pctymle, data = dfCrime, match="weighted",
nk=3, B=10, n.impute = 100)
paste("R-squares for Predicting Non-Missing Values for Each Variable Using Last Imputations of Predictors")
impute_arg$rsq
paste("Distribution of Values for Each Imputation")
table(impute_arg$imputed$wser)
dfCrime$wser[which(dfCrime$county==185)]<-mean(impute_arg$imputed$wser)
dfCrime$wser[which(dfCrime$county==185)]
#Plot of the criminal justice and law enforcment related variables vs crmrte
q1<-ggplot(data = dfCrime, aes(x = prbarr, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q2<-ggplot(data = dfCrime, aes(x = prbconv, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q3<-ggplot(data = dfCrime, aes(x = prbpris, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q4<-ggplot(data = dfCrime, aes(x = avgsen, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q5<-ggplot(data = dfCrime, aes(x = polpc, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q6<-ggplot(data = dfCrime, aes(x = mix, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
grid.arrange(q1, q2, q3, q4, q5, q6, ncol=2)
#plot of demographic information for counties Outside and Inside the metro areas
# population density, percent minority, percent young male
q1<-ggplot(data = dfCrime, aes(x = density, y = crmrte, color = region)) +
geom_point() + facet_wrap(~ metro) +
geom_smooth(method = "lm")
q2<-ggplot(data = dfCrime, aes(x = pctmin80, y = crmrte, color = region)) +
geom_point() + facet_wrap(~ metro) +
geom_smooth(method = "lm")
q3<-ggplot(data = dfCrime, aes(x = pctymle, y = crmrte, color = region)) +
geom_point()+ facet_wrap(~ metro) +
geom_smooth(method = "lm")
grid.arrange(q1, q2, q3, ncol=1)
dfCrime %>%
filter(west ==1 & central ==1) %>%
select(county, west, central, other, urban, region, regcode, metro)
dfCrime$west[which(dfCrime$county==71)]<-NA
dfCrime$central[which(dfCrime$county==71)]<-NA
dfCrime$other[which(dfCrime$county==71)]<-NA
dfCrime$urban[which(dfCrime$county==71)]<-NA
impute_arg <- aregImpute(~ crmrte +  urban + central + west +
prbarr + prbconv + prbpris + avgsen + polpc +
density + taxpc + pctmin80 + wcon + wtuc +
wtrd + wfir + wser + wmfg + wfed + wsta + wloc +
mix + pctymle, data = dfCrime, match="weighted",
nk=3, B=10, n.impute = 100)
paste("R-squares for Predicting Non-Missing Values for Each Variable Using Last Imputations of Predictors")
impute_arg$rsq
paste("Distribution of Values for Each Imputation")
table(impute_arg$imputed$central)
paste("Distribution of Values for Each Imputation")
table(impute_arg$imputed$west)
paste("Distribution of Values for Each Imputation")
table(impute_arg$imputed$urban)
#We need a mode function, so lets define one. Source - public domain
Mode = function(x){
ta = table(x)
tam = max(ta)
if (all(ta == tam))
mod = NA
else
if(is.numeric(x))
mod = as.numeric(names(ta)[ta == tam])
else
mod = names(ta)[ta == tam]
return(mod)
}
dfCrime$urban[which(dfCrime$county==71)]<-Mode(impute_arg$imputed$urban)
dfCrime$urban[which(dfCrime$county==71)]
dfCrime$nonurban[which(dfCrime$county==71)]<-1-Mode(impute_arg$imputed$urban)
dfCrime$nonurban[which(dfCrime$county==71)]
dfCrime$west[which(dfCrime$county==71)]<-Mode(impute_arg$imputed$west)
dfCrime$west[which(dfCrime$county==71)]
impute_arg <- aregImpute(~ crmrte + central + other +
prbarr + prbconv + prbpris + avgsen + polpc +
density + taxpc + pctmin80 + wcon + wtuc +
wtrd + wfir + wser + wmfg + wfed + wsta + wloc +
mix + pctymle, data = dfCrime, match="weighted",
nk=3, B=10, n.impute = 100)
paste("R-squares for Predicting Non-Missing Values for Each Variable Using Last Imputations of Predictors")
impute_arg$rsq
paste("Distribution of Values for Each Imputation")
table(impute_arg$imputed$other)
paste("Distribution of Values for Each Imputation")
table(impute_arg$imputed$central)
dfCrime$other[which(dfCrime$county==71)]<-Mode(impute_arg$imputed$other)
dfCrime$other[which(dfCrime$county==71)]
dfCrime$central[which(dfCrime$county==71)]<-1-Mode(impute_arg$imputed$other)
dfCrime$central[which(dfCrime$county==71)]
dfCrime$region <- case_when (
(dfCrime$central ==0 & dfCrime$west ==0) ~ 0, #Eastern, Coastal, Other
(dfCrime$central ==0 & dfCrime$west ==1) ~ 1, #Western
(dfCrime$central ==1 & dfCrime$west ==0) ~ 2  #Central
)
dfCrime$regcode =
factor( dfCrime$region , levels = 0:2 , labels =
c( 'O',
'W',
'C' )
)
dfCrime$metro =
factor( dfCrime$urban , levels = 0:1 , labels =
c( 'Outside',
'Inside'
)
)
dfCrime %>%
filter(county == 71) %>%
select(county, west, central, urban, region, regcode, metro)
options(repr.plot.width=8, repr.plot.height=4)
ggplot(data = dfCrime, aes(x = density)) +
geom_histogram(bins=90)
dfCrime %>%
filter(density < 0.01)
dfCrime$density[which(dfCrime$county==173)]<- NA
#dfSubset <-  #we will use the non-urban western counties
impute_arg <- aregImpute(~ crmrte +
prbarr + prbconv + prbpris + avgsen + polpc +
density + taxpc + pctmin80 + wcon + wtuc +
wtrd + wfir + wser + wmfg + wfed + wsta + wloc +
mix + pctymle, data = dfCrime %>% filter(urban==0 & west ==1),
match="weighted",  nk=3, B=10, n.impute = 30)
paste("R-squares for Predicting Non-Missing Values for Each Variable Using Last Imputations of Predictors")
impute_arg$rsq
paste("Distribution of Values for Each Imputation")
table(impute_arg$imputed$density)
dfCrime$density[which(dfCrime$county==173)]<-mean(impute_arg$imputed$density)
dfCrime$density[which(dfCrime$county==173)]
#dfEconVars <- as.data.frame(cbind(dfCrime$wcon, dfCrime$wtuc, dfCrime$wtrd, dfCrime$wfir,
#                                  dfCrime$wser, dfCrime$wmfg, dfCrime$wfed, dfCrime$wsta,
#                                  dfCrime$wloc))
#names(dfEconVars) <- c('wcon', 'wtuc', 'wtrd', 'wfir', 'wser',
#                              'wmfg', 'wfed', 'wsta', 'wloc')
#
#ggplot(melt(dfEconVars),aes(x=value)) + geom_histogram(bins=30) + facet_wrap(~variable)
#The economic variables
q1<-ggplot(data = dfCrime, aes(x = wcon, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q1a<-ggplot(data = dfCrime, aes(x = log(wcon), y = log(crmrte), color = region)) +
geom_point()+
geom_smooth(method = "lm")
q2<-ggplot(data = dfCrime, aes(x = wtuc, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q2a<-ggplot(data = dfCrime, aes(x = log(wtuc), y = log(crmrte), color = region)) +
geom_point()+
geom_smooth(method = "lm")
q3<-ggplot(data = dfCrime, aes(x = wtrd, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q3a<-ggplot(data = dfCrime, aes(x = log(wtrd), y = log(crmrte), color = region)) +
geom_point()+
geom_smooth(method = "lm")
q4<-ggplot(data = dfCrime, aes(x = wfir, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q4a<-ggplot(data = dfCrime, aes(x = log(wfir), y = log(crmrte), color = region)) +
geom_point()+
geom_smooth(method = "lm")
q5<-ggplot(data = dfCrime, aes(x = wser, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q5a<-ggplot(data = dfCrime, aes(x = log(wser), y = log(crmrte), color = region)) +
geom_point()+
geom_smooth(method = "lm")
q6<-ggplot(data = dfCrime, aes(x = wmfg, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q6a<-ggplot(data = dfCrime, aes(x = log(wmfg), y = log(crmrte), color = region)) +
geom_point()+
geom_smooth(method = "lm")
q7<-ggplot(data = dfCrime, aes(x = wfed, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q7a<-ggplot(data = dfCrime, aes(x = log(wfed), y = log(crmrte), color = region)) +
geom_point()+
geom_smooth(method = "lm")
q8<-ggplot(data = dfCrime, aes(x = wsta, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q8a<-ggplot(data = dfCrime, aes(x = log(wsta), y = log(crmrte), color = region)) +
geom_point()+
geom_smooth(method = "lm")
q9<-ggplot(data = dfCrime, aes(x = wloc, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q9a<-ggplot(data = dfCrime, aes(x = log(wloc), y = log(crmrte), color = region)) +
geom_point()+
geom_smooth(method = "lm")
options(repr.plot.width=8, repr.plot.height=16)
grid.arrange(q1, q1a, q2, q2a, q3, q3a, ncol=2)
grid.arrange(q4, q4a, q5, q5a, q6, q6a, ncol=2)
grid.arrange(q7, q7a, q8, q8a, q9, q9a, ncol=2)
dfCrime$logwcon<-log(dfCrime$wcon)
dfCrime$logwtuc<-log(dfCrime$wtuc)
dfCrime$logwtrd<-log(dfCrime$wtrd)
dfCrime$logwfir<-log(dfCrime$wfir)
dfCrime$logwser<-log(dfCrime$wser)
dfCrime$logwmfg<-log(dfCrime$wmfg)
dfCrime$logwfed<-log(dfCrime$wfed)
dfCrime$logwsta<-log(dfCrime$wsta)
dfCrime$logwloc<-log(dfCrime$wloc)
#Plot of the criminal justice and law enforcment related variables vs crmrte
q1<-ggplot(data = dfCrime, aes(x = prbarr, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q1a<-ggplot(data = dfCrime, aes(x = log(prbarr), y = log(crmrte), color = region)) +
geom_point()+
geom_smooth(method = "lm")
q2<-ggplot(data = dfCrime, aes(x = prbconv, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q2a<-ggplot(data = dfCrime, aes(x = log(prbconv), y = log(crmrte), color = region)) +
geom_point()+
geom_smooth(method = "lm")
q3<-ggplot(data = dfCrime, aes(x = prbpris, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q3a<-ggplot(data = dfCrime, aes(x = log(prbpris), y = log(crmrte), color = region)) +
geom_point()+
geom_smooth(method = "lm")
q4<-ggplot(data = dfCrime, aes(x = avgsen, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q4a<-ggplot(data = dfCrime, aes(x = log(avgsen), y = log(crmrte), color = region)) +
geom_point()+
geom_smooth(method = "lm")
q5<-ggplot(data = dfCrime, aes(x = polpc, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q5a<-ggplot(data = dfCrime, aes(x = log(polpc), y = log(crmrte), color = region)) +
geom_point()+
geom_smooth(method = "lm")
q6<-ggplot(data = dfCrime, aes(x = mix, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q6a<-ggplot(data = dfCrime, aes(x = log(mix), y = log(crmrte), color = region)) +
geom_point()+
geom_smooth(method = "lm")
grid.arrange(q1, q1a, q2, q2a, q3, q3a, ncol=2)
grid.arrange(q4, q4a, q5, q5a, q6, q6a, ncol=2)
dfCrime$logprbarr <- log(dfCrime$prbarr)
dfCrime$logprbconv <- log(dfCrime$prbconv)
dfCrime$logprbpris <- log(dfCrime$prbpris)
dfCrime$logavgsen <- log(dfCrime$avgsen)
dfCrime$logpolpc <- log(dfCrime$polpc)
dfCrime$logmix <- log(dfCrime$mix)
q1<-ggplot(data = dfCrime, aes(x = pctymle, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q1a<-ggplot(data = dfCrime, aes(x = log(pctymle), y = log(crmrte), color = region)) +
geom_point()+
geom_smooth(method = "lm")
q2<-ggplot(data = dfCrime, aes(x = pctmin80, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q2a<-ggplot(data = dfCrime, aes(x = log(pctmin80), y = log(crmrte), color = region)) +
geom_point()+
geom_smooth(method = "lm")
q3<-ggplot(data = dfCrime, aes(x = density, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q3a<-ggplot(data = dfCrime, aes(x = log(density), y = log(crmrte), color = region)) +
geom_point()+
geom_smooth(method = "lm")
grid.arrange(q1, q1a, q2, q2a, q3, q3a, ncol=2)
dfCrime$logdensity <- log(dfCrime$density)
dfCrime$logpctmin80 <- log(dfCrime$pctmin80)
dfCrime$logpctymle <- log(dfCrime$pctymle)
q1<-ggplot(data = dfCrime, aes(x = taxpc, y = crmrte, color = region)) +
geom_point()+
geom_smooth(method = "lm")
q1a<-ggplot(data = dfCrime, aes(x = log(taxpc), y = log(crmrte), color = region)) +
geom_point()+
geom_smooth(method = "lm")
q2<-ggplot(data = dfCrime, aes(x = crmrte)) +
geom_histogram(bins=30)
q2a<-ggplot(data = dfCrime, aes(x = log(crmrte))) +
geom_histogram(bins=30)
grid.arrange(q1, q1a, q2, q2a, ncol=2)
dfCrime$logcrmrte = log(dfCrime$crmrte)
dfCrime$logtaxpc = log(dfCrime$taxpc)
dfCrime$allWages<-dfCrime$wcon + dfCrime$wtuc + dfCrime$wtrd + dfCrime$wfir +
dfCrime$wser + dfCrime$wmfg + dfCrime$wfed + dfCrime$wsta + dfCrime$wloc
dfCrime$crimJustEff<-dfCrime$prbarr * dfCrime$prbconv
dfCrime$logcrimJustEff<-log(dfCrime$crimJustEff)
options(repr.plot.width=3, repr.plot.height=4)
ggplot(data = dfCrime, aes(y = crmrte)) +
geom_boxplot()
options(repr.plot.width=8, repr.plot.height=8)
pairs(~ logcrimJustEff + logpolpc + allWages + logtaxpc + logdensity + logpctmin80 +
logpctymle, data=dfCrime, main="Scatterplot Matrix of Model Variables")
options(repr.plot.width=4, repr.plot.height=4)
hist((dfCrime$prbconv))
hist((dfCrime$prbarr))
# how many standard deviations away the outlier lies
(dfCrime[51,]$prbarr - mean(dfCrime$prbarr))/sd(dfCrime$prbarr)
#hist(log(dfCrime$crimJustEff))
ggplot(data=dfCrime, aes(sample= crimJustEff)) + stat_qq() + stat_qq_line() +
ggtitle("QQ Plot of Crim Just Eff")
dfCrime[dfCrime$crimJustEff > 1,] # find outlier
dfCrime$prbarr[which(dfCrime$county==115)]<-NA # set the value to NA so it will be imputed
dfCrime$prbconv[which(dfCrime$county==115)]<-NA # set the value to NA so it will be imputed
impute_arg <- aregImpute(~ crmrte +  urban + central + west + other +
prbarr + prbconv + prbpris + avgsen + polpc +
density + taxpc + pctmin80 + wcon + wtuc +
wtrd + wfir + wser + wmfg + wfed + wsta + wloc +
mix + pctymle, data = dfCrime, match="weighted",
nk=3, B=10, n.impute = 100)
paste("R-squares for Predicting Non-Missing Values for Each Variable Using Last Imputations of Predictors")
impute_arg$rsq
paste("Distribution of Values for Each Imputation")
table(impute_arg$imputed$prbarr)
paste("Distribution of Values for Each Imputation")
table(impute_arg$imputed$prbconv)
dfCrime$prbarr[which(dfCrime$county==115)]<-mean(impute_arg$imputed$prbarr)
dfCrime$prbarr[which(dfCrime$county==115)]
dfCrime$prbconv[which(dfCrime$county==115)]<-mean(impute_arg$imputed$prbconv)
dfCrime$prbconv[which(dfCrime$county==115)]
dfCrime$logprbarr[which(dfCrime$county==115)]<-log(dfCrime$prbarr[which(dfCrime$county==115)])
dfCrime$logprbarr[which(dfCrime$county==115)]
dfCrime$logprbconv[which(dfCrime$county==115)]<-log(dfCrime$prbconv[which(dfCrime$county==115)])
dfCrime$logprbconv[which(dfCrime$county==115)]
dfCrime$crimJustEff<-dfCrime$prbarr * dfCrime$prbconv
dfCrime$logcrimJustEff<-log(dfCrime$crimJustEff)
ggplot(data=dfCrime, aes(sample= crimJustEff)) + stat_qq() + stat_qq_line() +
ggtitle("QQ Plot of Crim Just Eff")
ggplot(data=dfCrime, aes(sample= logcrimJustEff)) + stat_qq() + stat_qq_line() +
ggtitle("QQ Plot of log transformed Crim Just Eff")
## Can show histogram/qqplot side by side in RMD.
# # Quantiles for all jobs
dfWage<-mutate(dfCrime,qCon=ntile(dfCrime$wcon,4))
dfWage<-mutate(dfWage,qTuc=ntile(dfCrime$wtuc,4))
dfWage<-mutate(dfWage,qTrd=ntile(dfCrime$wtrd,4))
dfWage<-mutate(dfWage,qFir=ntile(dfCrime$wfir,4))
dfWage<-mutate(dfWage,qSer=ntile(dfCrime$wser,4))
dfWage<-mutate(dfWage,qMfg=ntile(dfCrime$wmfg,4))
dfWage<-mutate(dfWage,qFed=ntile(dfCrime$wfed,4))
dfWage<-mutate(dfWage,qSta=ntile(dfCrime$wsta,4))
dfWage<-mutate(dfWage,qLoc=ntile(dfCrime$wloc,4))
## Average quantile
dfWage$qAvg= (dfWage$qCon+dfWage$qTuc+dfWage$qTrd+dfWage$qFir+dfWage$qSer+dfWage$qMfg+
dfWage$qFed+dfWage$qSta+dfWage$qLoc)/9
plot(dfCrime$allWages,dfWage$qAvg)
hist(dfCrime$allWages)
ggplot(data=dfCrime, aes(sample= allWages)) + stat_qq() + stat_qq_line() +
ggtitle("QQ Plot of sum of wages")
mod1 <- lm(dfCrime$logcrmrte ~ dfCrime$allWages + dfCrime$logcrimJustEff)
(mod1)
summary(mod1)$adj.r.square
## will be details on effect size and standard error as we cover this in class.
plot(mod1, which=5)
plot(mod1, which=2)
plot(mod1, which=3)
plot(mod1, which=1)
cov(resid(mod1), dfCrime$allWages)
cov(resid(mod1), log(dfCrime$crimJustEff))
mean(resid(mod1))
corrplot(cor(dfCrime[,c("logcrmrte", "logcrimJustEff", "logprbarr", "logprbconv",
"prbpris", "polpc", "taxpc", "allWages", "urban", "density",
"pctymle", "pctmin80")]),method='circle', type = 'lower')
par(mfrow = c(2,2))
hist(dfCrime$polpc, breaks=25)
hist(dfCrime$taxpc, breaks=25)
hist(dfCrime$density, breaks=25)
par(mfrow = c(3,2))
hist(dfCrime$polpc, main="Hist of polpc")
hist(dfCrime$logpolpc, main="Hist of logpolpc")
hist(dfCrime$taxpc, main="Hist of taxpc")
hist(dfCrime$logtaxpc, main="Hist of logtaxpc")
hist(dfCrime$density, main="Hist of density")
hist(dfCrime$logdensity, main="Hist of logdensity")
# par(mfrow = c(2,2))
# plot(dfCrime$logcrimJustEff, dfCrime$polpc, main = 'polpc vs logcrimJustEff', xlab='logcrimJustEff', ylab='polpc')
# plot(dfCrime$logcrimJustEff, dfCrime$logpolpc, main = 'logpolpc vs logcrimJustEff', xlab='logcrimJustEff', ylab='logpolpc')
# plot(dfCrime$logcrimJustEff, dfCrime$taxpc, main = 'taxpc vs logcrimJustEff', xlab='logcrimJustEff', ylab='taxpc')
# plot(dfCrime$logcrimJustEff, dfCrime$logtaxpc, main = 'logtaxpc vs logcrimJustEff', xlab='logcrimJustEff', ylab='logtaxpc')
model2 <- lm(logcrmrte ~ logcrimJustEff + logpolpc + allWages + taxpc + density, data = dfCrime)
model2
summary(model2)
plot(model2)
summary(dfCrime$pctmin80)
boxplot(dfCrime$pctmin80)
plot(dfCrime$pctmin80, dfCrime$logcrmrte)
abline(lm(dfCrime$logcrmrte~dfCrime$pctmin80))
plot(dfCrime$logpctmin80, dfCrime$logcrmrte)
abline(lm(dfCrime$logcrmrte~dfCrime$logpctmin80))
## Testing
dfCrime <- dfCrime[dfCrime$county != 55,]
dfCrime
model3<-lm(logcrmrte ~ logcrimJustEff + logpolpc + log(allWages) + logtaxpc + density +
logpctmin80, data = dfCrime)
summary(model3)
model3<-lm(logcrmrte ~ logcrimJustEff + logpolpc + log(allWages) + logtaxpc + density +
logpctmin80, data = dfCrime)
summary(model3)
plot(model3)
## Testing
dfCrime <- dfCrime[dfCrime$county != 55,]
dfCrime <- dfCrime[dfCrime$county != 115,]
dfCrime
model3<-lm(logcrmrte ~ logcrimJustEff + logpolpc + log(allWages) + logtaxpc + density +
logpctmin80, data = dfCrime)
summary(model3)
plot(model3)
coeftest(model3, vcov=vcovHC)
